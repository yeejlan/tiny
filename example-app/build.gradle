
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

configurations {
	ajc
	ajweaver
}

dependencies { 
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
	compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.14.v20181114'
	compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.14.v20181114'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
	compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.12.0'
	compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.12.0'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'com.google.dagger', name: 'dagger', version: '2.20'
	kapt group: 'com.google.dagger', name: 'dagger-compiler', version: '2.20'
	compile project(":tiny-annotation")
	compile project(":tiny-compiler")
	kapt project(":tiny-compiler")
	compile project(":tiny")
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.8'
	compile group: 'org.codehaus.groovy', name: 'groovy-templates', version: '2.5.5'
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
	ajc 'org.aspectj:aspectjtools:1.9.2'
	ajc 'org.aspectj:aspectjrt:1.9.2'
	ajweaver 'org.aspectj:aspectjweaver:1.9.2'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

tasks.withType(JavaCompile) { 
	options.encoding = "UTF-8"
	options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
	useJUnitPlatform()
	failFast = true
	testLogging {
		showStandardStreams = true
	}
}

compileJava {
	sourceCompatibility="1.8"
	targetCompatibility="1.8"	
	dependsOn configurations.ajc.getTaskDependencyFromProjectDependency(true, "compileJava")

	doLast {

	}
}

task "as"(dependsOn: assemble)
task "c"(dependsOn: classes)

task weave {
	dependsOn build

	doLast {
		weaveAspectJToClass()
	}
}

def weaveAspectJToClass() {
	ant.taskdef(resource:"org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajc.asPath)
	ant.iajc(source:"1.8", 
			target:"1.8", 
			showWeaveInfo:true,
			inpath:'build/classes',
			maxmem:"512m", 
			fork:"true",
			//aspectPath:"",
			classpath: "${configurations.ajc.asPath};../tiny/build/classes/kotlin/main;../tiny-annotation/build/classes/kotlin/main",
			destDir:"build/classes/java/main",
		){}
}


def runWithWeaver = true
def tinyApplictionEnv = "development"

run {

	doFirst {
		if(runWithWeaver) {
			def weaver = configurations.ajweaver.asPath
			jvmArgs = jvmArgs << "-javaagent:$weaver"
		}
		jvmArgs = jvmArgs << "-XXaltjvm=dcevm"
		jvmArgs = jvmArgs << "-javaagent:c:/tools/hotswap-agent.jar"
		jvmArgs = jvmArgs << "-Dtiny.appliction.env=$tinyApplictionEnv"
	}
}


//applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"]

mainClassName = "example.ExampleAppKt"
